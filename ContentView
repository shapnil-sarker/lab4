//
//  ContentView.swift
//  Flashcard
//
//  Created by Shapnil Sarker on 10/13/24.
//

import SwiftUI

struct ContentView: View {
    @State private var cards: [Card] = Card.mockedCards
    @State private var deckID: Int = 0
    @State private var cardsToPractice: [Card] = []
    @State private var cardsMemorized: [Card] = []
    @State private var createCardViewPresented = false
    var body: some View{
        VStack {
               Button("Reset") {
                   cards = cardsToPractice + cardsMemorized
                   cardsToPractice = []
                   cardsMemorized = []
                   deckID +=1
               }
               .disabled(cardsToPractice.isEmpty && cardsMemorized.isEmpty)

               Button("More Practice") {
                   cards = cardsToPractice
                   cardsToPractice = []
                   deckID +=1
               }
               .disabled(cardsToPractice.isEmpty)
           }
        ZStack {
            ForEach(0..<cards.count, id: \.self) { index in
                CardView(card: cards[index], onSwipedLeft: {
                    
                    let removedCard = cards.remove(at: index)               cardsToPractice.append(removedCard)
                   }, onSwipedRight: {
                    let removedCard = cards.remove(at: index)
                    cardsMemorized.append(removedCard
                })
                    .rotationEffect(.degrees(Double(cards.count - 1 - index) * -5))
            }
        }
        .animation(.bouncy, value: cards)
        .ID(deckId)
        .sheet(isPresented: $createCardViewPresented, content: {
            CreateFlashcardView { card in
                    cards.append(card)
    }
    
}
            .overlay(alignment: .topTrailing) { // <-- Add an overlay modifier with top trailing alignment for its contents
                Button("Add Flashcard", systemImage: "plus") {  // <-- Add a button to add a flashcard
                    createCardViewPresented.toggle()        #Preview {
            ContentView()
        }

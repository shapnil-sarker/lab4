//
//  CardView.swift
//  Flashcard
//
//  Created by Shapnil Sarker on 10/13/24.
//

import SwiftUI

struct CardView: View {
    let card: Card
    var onswipedLeft:  (()-> Void)?
    var onswipedRight: (()-> Void)?
    @State private var isShowingQuestion = true
    @State private var offset: CGSize = .zero;
    private let swipeThreshold: Double = 200;    var body: some View {
        
        
        ZStack{
            ZStack {
                RoundedRectangle(cornerRadius: 25.0)
                    .fill(offset.width < 0 ? .red : .green)
                RoundedRectangle(cornerRadius: 25.0)
                .fill(isShowingQuestion ? .blue : .indigo)
                .shadow(color: .black, radius: 4, x: -2, y: 2)
                .opacity(1 - abs(offset.width) / swipeThreshold)
                                 }
            VStack(spacing: 20){
                Text(isShowingQuestion ? "Question" : "Answer")
                    .bold()
                Rectangle()
                    .frame(height: 1)
                
                Text(isShowingQuestion ? card.question : card.answer)
            }
            .font(.title)
            .foregroundStyle(.white)
            .padding()
        }
        .frame(width: 300, height: 500)
        .onTapGesture {
            isShowingQuestion.toggle()
        }
        .opacity(3 - abs(offset.width) / swipeThreshold * 3)        .rotationEffect(.degrees(offset.width / 20.0))
        .offset(CGSize(width: offset.width, height: 0))

        .gesture(DragGesture()
            .onChanged { gesture in
                let translation = gesture.translation
                print(translation)
                offset = translation
            }.onEnded { gesture in  // <-- onEnded called when gesture ends
                
                if gesture.translation.width > swipeThreshold {
                    print("ðŸ‘‰ Swiped right")
                    onswipedRight?()
                    
                } else if gesture.translation.width < -swipeThreshold {
                    print("ðŸ‘ˆ Swiped left")
                    onswipedLeft?()
                    
                } else {
                    print("ðŸš« Swipe canceled")
                    withAnimation(.bouncy){
                        offset = .zero
                    }
                }
            }
        )
    }
}
#Preview {
    CardView(card: Card(question: "Located at the Southern end of Puget Sound, what is the capitol of Washington?",
                        answer: "Olympia"))
}
struct Card: Equatable{
    let question: String
    let answer: String
    
    static let mockedCards = [
            Card(question: "What year did the US get independence?", answer: "1776"),
            Card(question: "Which city serves as the capital of Georgia?", answer: "Atlanta"),
            Card(question: "What year did the Titanic sink?", answer: "1912"),
            Card(question: "Which city is the capital of Florida?", answer: "Tallahassee"),
            Card(question: "What is the largest planet in our solar system?", answer: "Jupiter")
        ]
    }
